<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="ErrorProvider1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Panel1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcI
        CQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwM
        DAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCAA4AI0DASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9/K/Pv/grv/wWtv8A/gnL8Y/C/gnw14T0jxXqup6Q2san9vup
        IFs4nmMVuqFAcsxinLA9AIz/ABV+ghzjjrX82PxWluv+CvH/AAWRvbDTb6QaV498V/2XY3cB3+RotmhT
        7RGrcbvsds8+3oXY56k185xLmFbD0YU8M7VJySX6/ovmfJ8XZpXwuHp0sG7Vakko/rv8l8z9f/8Agj3/
        AMFW5/8Agpl4Z8brrPh/TfDHiPwdd2xa0srh5op7O4RvLlBcA7hJDMrAcAeX/e5+dviJ/wAFnP2tvDHx
        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
</value>
  </data>
</root>